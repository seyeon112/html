git에서 glt-hub계정 추가
git config --global user.email "git-hub메일"
git config --global user.name "gib-hub이름"

삭제할 때
git config --global --unset-all user.email
git config --global --unset-all user.name


----------------------------------------------
git 버전 생성
1) 관리할 폴더의 경로로 git-bash를 연다. 
2) git init
- git이 관리를 시작할 수 있다.
3) 소스 코드 파일 생성, 수정, 삭제 등 작업
4) git status
- git이 init을 한 폴더의 상태 변경을 확인할 수 있다.
5) git add .
- "."은 현재 폴더의 경로를 의미한다. 대신에 파일 이름도 작성할 수 있다.
- add는 언스테이징된 파일을 스테이징해주기 위해 사용하는 명령어이다.
- 스테이징 된 파일을 다시 언스테이징 시키고 싶다면 git reset을 사용하면 된다.
- 하나의 파일만 언스테이징 하고 싶다면 git rm -r --cached 파일명을 입력하면 된다.
6) git commit -m "메세지"
- 현재 스테이징에 올라와있는 파일을 새로운 버전으로 확정한다.
- git commit --amend를 사용하면 메세지를 수정할 수 있다.
7) git log, git log --pretty=oneline, git log --oneline
- 현재 commit된 버전을 확인할 수 있다.
8) git checkout 버전, git switch 브랜치



------------------------------------------------------------
브랜치 생성
1) master 브랜치에서 작업하지 않는다. 따라서 branch를 생성한다
2) git branch
- 현재 생성된 branch를 확인할 수 있다.
3) commit 된 버전에서 브랜치를 생성하기 위해서 master에 이동한다.
4) git checkout -b 브랜치명, git branch 브랜치명
- 두 개의 명령어로 branch를 만들 수 있다.
5) 만든 branch에서 작업 후 master에 merge한다.
6) branch를 지우고 싶다면 아래 명령어를 사용한다.
- git branch -D 브랜치명


--------------------------------------------
전체 흐름
전체 순서
   git init
   git add .
   git status
   git commit -m "메세지"
   git log --pretty=oneline
   git checkout [커밋아이디, 브랜치명]
   git branch [브랜치명]
   git branch -d [브랜치명] : 브랜치 삭제
   git merge [브랜치명]
   git remote add [원격 저장소 이름] [서버의 경로]
   git remote -v
   git remote remove [원격 저장소 이름]
   git push [원격 저장소 이름] [원격 저장소의 브랜치]


팀장
   organization 생성
   팀원 초대
   repository 생성
   팀원 초대
   init(.gitignore)
   organization에 push

전원
   fork

팀원
   clone
   작업 브랜치 생성
   작업 진행
   add
   commit
   master 브랜치로 이동
   병합
   push origin
   PR
   팀장에게 연락
   작업 브랜치 이동
   작업 진행

팀장
   팀원에게 연락 옴
   PR 확인
   충돌 시 선택 후 확정
   충돌 없을 시 Merge
   팀원 전체에게 연락: 전체 pull 받으세요

팀원
   master 브랜치 이동
   pull project
   작업 브랜치 이동
   다른 작업자의 코드가 필요하면 merge
   작업 진행













